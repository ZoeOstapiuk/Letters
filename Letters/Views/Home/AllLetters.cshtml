@using Letters.Models
@using Letters.Helpers

@model IndexViewModel

<script type="text/javascript">
    function onSuccess(data) {
        document.getElementById("page-letters-container").classList.add("col-lg-6");

        document.getElementById("result").style.display = "block";
        document.getElementById("result").classList.add("col-lg-6");
    }
    function hideAuthorLetter() {
        document.getElementById("page-letters-container").classList.remove("col-lg-6");

        document.getElementById("result").style.display = "none";
    }
</script>

<div class="container" id="page-letters-container">
    @foreach (Letter l in Model.Letters)
    {
        <div class="item-letter-container">
            <div class="w3-panel w3-card-4 item-letter w3-pale-green w3-leftbar w3-border-green">
                @if (l.Content.Length <= 200)
                {
                    @l.Content
                }
                else
                {
                    @(l.Content.Substring(0, 200) + "...")
                }
            </div>
            <br/>
            @{
                var lnk = Ajax.ActionLink("T", "ViewLetter", "Letters", new { id = l.LetterId }, new AjaxOptions
                {
                    UpdateTargetId = "result",
                    OnSuccess = "onSuccess"
                }, new { @class = "w3-btn-floating w3-green" });
                @Html.Raw(lnk.ToString().Replace(">T<", "><span class='glyphicon glyphicon-eye-open'/><"));
            }
            <!--<a href="@Url.Action("EditLetter", "Letters", new { id = l.LetterId })" class="w3-btn-floating w3-green"><span class="glyphicon glyphicon-pencil"/></a>-->
            <!--<a href="@Url.Action("DeleteLetter", "Letters", new { id = l.LetterId })" class="w3-btn-floating w3-red"><span class="glyphicon glyphicon-remove" /></a>-->
        </div>
    }
    <br/>
    <div class="btn-group">
        @Html.PageLinks(Model.PageInfo, x => Url.Action("AllLetters", new { page = x + 1 }))
    </div>
</div>
<div id="result">
</div> 


