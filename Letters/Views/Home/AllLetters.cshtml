@using Letters.Models
@using Letters.Helpers

@model IndexViewModel

<script type="text/javascript">
    var gLettersCounter = 0;

    $(document).ready(function () {
        $(".item-letter-container").mouseenter(function () {
            $(this).css({ border: '' }).animate({ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }, 200);
        }).mouseleave(function () {
            $(this).css({ border: '' }).animate({ borderBottomLeftRadius: 70, borderBottomRightRadius: 70 }, 200);
        });
    });

    function onSuccess(data, id, xhr) {
        var completeId = "#" + id;

        $(completeId).siblings(".item-letter-with-link").hide("slide", { direction: 'up' }, 500, function () {
            $(completeId).parent().addClass("col-lg-12");
            $(completeId).html(data);
            $(completeId).show("slide", { direction: 'up' }, 500);
        });
    }

    function hideAuthorLetter(parentElementToHide) {
        parentElementToHide.hide("slide", { direction: 'up' }, 500, function () {
            $(parentElementToHide).parent().removeClass("col-lg-12");

            $(parentElementToHide).siblings(".item-letter-with-link").show("slide", { direction: 'up' }, 500);
        });
    }
</script>
<div class="container" id="page-letters-container">
    @if (TempData["message"] != null)
    {
        <div id="alert-santa-reply" class="w3-round-xxlarge w3-transparent w3-card-8" style="margin: 20px;">
            <div style="display: inline-block" class="w3-panel">@TempData["message"]</div>
            <a onclick="hideAlert()"><span class="glyphicon glyphicon-remove" /></a>
        </div>
    }

    @for (int i = 0; i < Model.Letters.Count; i++)
    {
        <div class="item-letter-container w3-card-2" id="id-to-replace">
            <script>
                $("#id-to-replace").attr('id', (gLettersCounter).toString());
            </script>
            <div class="item-letter-with-link">
                <div class="item-letter">
                    @if (Model.Letters[i].Content.Length <= 200)
                {
                        @Model.Letters[i].Content
                    }
                    else
                    {
                        @(Model.Letters[i].Content.Substring(0, 200) + "...")
                    }
                </div>
                @{
                    var lnk = Ajax.ActionLink("T", "ViewLetter", "Letters", new { id = Model.Letters[i].LetterId }, new AjaxOptions
                    {
                        OnSuccess = "onSuccess(data, 'result-" + i + "', xhr)"
                    }, new { @class = "btn btn-success" });
                    @Html.Raw(lnk.ToString().Replace(">T<", "><span class='glyphicon glyphicon-resize-full'/><"));
                }
            </div>
            <div id="result" class="showablePart">
            </div>
            <script>
                $("#result").attr('id', 'result-' + (gLettersCounter++).toString());
            </script>
        </div>
    }
</div>
<div class="btn-group">
    @Html.PageLinks(Model.PageInfo, x => Url.Action("AllLetters", new { page = x + 1 }))
</div>



